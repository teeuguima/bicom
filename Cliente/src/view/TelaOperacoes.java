/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import facade.Facade;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import interfaces.InterfaceHostAirlines;
import java.io.IOException;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Trecho;

/**Classe JFrame responsável por exibir ao cliente
 * trechos disponíveis para compra, realizar compra
 * e buscar trechos.
 *
 * @author Mateus Guimarães
 */
public class TelaOperacoes extends javax.swing.JFrame implements Runnable {

    private Facade facade;

    /**
     * Creates new form TelaOperacoes
     *
     * @param facade
     */
    public TelaOperacoes(Facade facade) {
        initComponents();
        this.facade = facade;
    }

    public TelaOperacoes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldOrigem1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldDestino1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListAzul = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListLatam = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListGol = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonReservar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLayeredPane2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel10.setText("Origem");

        jLabel11.setText("Destino");

        jLabel12.setText("Insira uma cidade de origem");

        jLabel13.setText("Insira uma cidade de destino");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel15.setText("Cliente:");

        jLabel9.setText("jLabel9");

        jLayeredPane2.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jTextFieldOrigem1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jTextFieldDestino1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jButtonBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(jTextFieldOrigem1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13)
                                    .addComponent(jTextFieldDestino1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addComponent(jButtonBuscar)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(22, 22, 22))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDestino1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldOrigem1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jButtonBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.setBackground(new java.awt.Color(0, 52, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\matee\\Documents\\Material Digital\\Engenharia de Computação\\Semestre 19.1\\Mi Concorrência e Conectividades\\3º Problema\\Cliente\\globe.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Montserrat ExtraBold", 0, 19)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BiCom - Passagens Áereas");
        jLabel2.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Montserrat ExtraBold", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Minhas Passagens");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minhasPassagensActionPerfomed(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon("C:\\Users\\matee\\Documents\\Material Digital\\Engenharia de Computação\\Semestre 19.1\\Mi Concorrência e Conectividades\\3º Problema\\Cliente\\tickets.png")); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minhasPassagensActionPerfomed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(502, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(546, 546, 546))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(72, 72, 72))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jLabel16))
                        .addGap(8, 8, 8)))
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jListAzul.setToolTipText("");
        jScrollPane2.setViewportView(jListAzul);

        jLabel4.setText("Latam");

        jScrollPane3.setViewportView(jListLatam);

        jScrollPane4.setViewportView(jListGol);

        jLabel5.setText("Azul");

        jLabel6.setText("Gol");

        jLayeredPane3.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane4))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addGap(169, 169, 169))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jScrollPane1.setViewportView(jLayeredPane3);

        jButtonReservar.setText("Reservar");
        jButtonReservar.setToolTipText("");
        jButtonReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReservarActionPerformed(evt);
            }
        });

        jLabel7.setText("Monte sua viagem, clicando na rota de sua origem e escolhendo a rota com o destino desejado. Limite máximo de três rotas!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**Método que captura evento de clique no botão buscar,
     * capturando os dados nos campos de texto
     * e retornando nas jLists as passagens disponíveis do 
     * trecho solicitado.
     * 
     * @param evt 
     */
    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        try {
            Registry registryHost = facade.getRegistry();
            //Registry registryHost = LocateRegistry.getRegistry("172.16.103.5",5595);
            //Registry registryHost = LocateRegistry.getRegistry(5595);
            InterfaceHostAirlines serverHost = (InterfaceHostAirlines) registryHost.lookup("OperacoesHost");
            System.out.println(this.jTextFieldOrigem1.getText());
            System.out.println(this.jTextFieldDestino1.getText());

            trechosEncontrados(serverHost.buscarTrecho(this.jTextFieldOrigem1.getText(), this.jTextFieldDestino1.getText()));
        } catch (RemoteException ex) {
            System.out.println(ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButtonBuscarActionPerformed

    /**Método que captura o evento de clique no botão Reservar,
     * coletando os itens selecionados nas jLists das companhias,
     * desta forma, pede ao servidor que faça a reserva das passagens
     * escolhidas. O retorno do servidor, faz com que emita um aviso 
     * sobre o status da reserva.
     * 
     * @param evt 
     */
    private void jButtonReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReservarActionPerformed
        if (jListAzul.getSelectedValue() != null) {
            String passagemAzul = jListAzul.getSelectedValue();
            String[] info = passagemAzul.split(" : ");
            System.out.println(info[1]);
            String origem = info[1].substring(9);
            String destino = info[2].substring(10);
            String ida = info[5];
            String volta = info[7];

            try {
                if (reservarTrechos("Azul Airlines", origem, destino, ida, volta)) {
                    JOptionPane.showMessageDialog(this, "Reserva realizada com sucesso na Azul Airlines", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Não foi possível realizar a sua reserva, tente novamente!", "Confirmação", JOptionPane.ERROR_MESSAGE);
                }
            } catch (RemoteException | NotBoundException ex) {
                Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (this.jListGol.getSelectedValue() != null) {
            String[] info = jListGol.getSelectedValue().split(" : ");
            System.out.println(info[1]);
            String origem = info[1].substring(9);
            String destino = info[2].substring(10);
            String ida = info[5];
            String volta = info[7];
            System.out.println("Pediu");
            try {
                if (reservarTrechos("Gol Airlines", origem, destino, ida, volta)) {
                    System.out.println("Foi");
                    JOptionPane.showMessageDialog(this, "Reserva realizada com sucesso na Gol Airlines", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Não foi possível realizar a sua reserva, tente novamente!", "Confirmação", JOptionPane.ERROR_MESSAGE);
                }
            } catch (RemoteException | NotBoundException ex) {
                Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (this.jListLatam.getSelectedValue() != null) {
            String[] info = jListLatam.getSelectedValue().split(" : ");
            System.out.println("Pediu");
            String origem = info[1].substring(9);
            String destino = info[2].substring(10);
            String ida = info[5];
            String volta = info[7];

            try {
                if (reservarTrechos("Latam Airlines", origem, destino, ida, volta)) {
                    System.out.println("Foi");
                    JOptionPane.showMessageDialog(this, "Reserva realizada com sucesso na Latam Airlines", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Não foi possível realizar a sua reserva, tente novamente!", "Confirmação", JOptionPane.ERROR_MESSAGE);
                }
            } catch (RemoteException | NotBoundException ex) {
                Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        try {
            trechosDisponiveis();
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonReservarActionPerformed
    /**Método que chama a classe JFrame responsável pela exibição
     * das passagens reservadas!
     * 
     * @param evt 
     */
    private void minhasPassagensActionPerfomed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minhasPassagensActionPerfomed
        // TODO add your handling code here:
        TelaMinhasPassagens minhasPassagens;
        try {
            minhasPassagens = new TelaMinhasPassagens(this.facade);
            
            new Thread(minhasPassagens).start();
            
        } catch (IOException ex) {
            Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        }
        


    }//GEN-LAST:event_minhasPassagensActionPerfomed
    
    /**Método que se comunica com o servidor
     * para solicitar a reserva do trecho requerido.
     * 
     * @param companhia
     * @param origem
     * @param destino
     * @param ida
     * @param volta
     * @return booleano
     * @throws RemoteException
     * @throws NotBoundException 
     */
    private boolean reservarTrechos(String companhia, String origem, String destino, String ida, String volta) throws RemoteException, NotBoundException {
        Registry registryHost = facade.getRegistry();
        InterfaceHostAirlines serverHost = (InterfaceHostAirlines) registryHost.lookup("OperacoesHost");

        return serverHost.reservarTrecho(facade.getCpf(), companhia, origem, destino, ida, volta);
    }
    
    /**Método que insere os trechos disponíveis nas jLists
     * das companhias.
     * 
     * @throws RemoteException
     * @throws NotBoundException 
     */
    private void trechosDisponiveis() throws RemoteException, NotBoundException {
        DefaultListModel listAzul = new DefaultListModel();
        DefaultListModel listGol = new DefaultListModel();
        DefaultListModel listLatam = new DefaultListModel();

        String[] dtasIdas;
        String[] dtasVoltas;

        //Registry registryHost = LocateRegistry.getRegistry("172.16.103.5",5595);
        Registry registryHost = facade.getRegistry();
        InterfaceHostAirlines serverHost = (InterfaceHostAirlines) registryHost.lookup("OperacoesHost");

        Iterator trechosAzul = serverHost.getTrechosAzul().iterator();
        Iterator trechosGol = serverHost.getTrechosGol().iterator();
        Iterator trechosLatam = serverHost.getTrechosLatam().iterator();

        while (trechosAzul.hasNext()) {
            int i = 0;
            int j = 0;
            Trecho azul = (Trecho) trechosAzul.next();
            dtasIdas = new String[azul.getDatasIdas().size()];
            dtasVoltas = new String[azul.getDatasVoltas().size()];
            Iterator datasIdas = azul.getDatasIdas().iterator();
            Iterator datasVoltas = azul.getDatasVoltas().iterator();
            while (datasIdas.hasNext()) {
                String ida = (String) datasIdas.next();
                dtasIdas[i] = ida;
                //System.out.println(dtasIdas[i]);
                i++;
            }
            while (datasVoltas.hasNext()) {
                String volta = (String) datasVoltas.next();
                dtasVoltas[j] = volta;
                listAzul.addElement(azul.toString() + " : " + "Ida =" + " : " + dtasIdas[j] + " : " + "Volta =" + " : " + dtasVoltas[j]);
                //System.out.println(dtasVoltas[j]);
                j++;
            }
        }
        this.jListAzul.setModel(listAzul);
        while (trechosGol.hasNext()) {
            int i = 0;
            int j = 0;
            Trecho gol = (Trecho) trechosGol.next();
            dtasIdas = new String[gol.getDatasIdas().size()];
            dtasVoltas = new String[gol.getDatasVoltas().size()];
            Iterator datasIdas = gol.getDatasIdas().iterator();
            Iterator datasVoltas = gol.getDatasVoltas().iterator();

            while (datasIdas.hasNext()) {
                String ida = (String) datasIdas.next();
                dtasIdas[i] = ida;
                //System.out.println(dtasIdas[i]);
                i++;
            }
            while (datasVoltas.hasNext()) {
                String volta = (String) datasVoltas.next();
                dtasVoltas[j] = volta;
                listGol.addElement(gol.toString() + " : " + "Ida =" + " : " + dtasIdas[j] + " : " + "Volta =" + " : " + dtasVoltas[j]);
                //System.out.println(dtasVoltas[j]);
                j++;
            }
        }
        this.jListGol.setModel(listGol);
        while (trechosLatam.hasNext()) {
            int i = 0;
            int j = 0;
            Trecho latam = (Trecho) trechosLatam.next();
            dtasIdas = new String[latam.getDatasIdas().size()];
            dtasVoltas = new String[latam.getDatasVoltas().size()];
            Iterator datasIdas = latam.getDatasIdas().iterator();
            Iterator datasVoltas = latam.getDatasVoltas().iterator();

            while (datasIdas.hasNext()) {
                String ida = (String) datasIdas.next();
                dtasIdas[i] = ida;
                //System.out.println(dtasIdas[i]);
                i++;
            }
            while (datasVoltas.hasNext()) {
                String volta = (String) datasVoltas.next();
                dtasVoltas[j] = volta;
                listLatam.addElement(latam.toString() + " : " + "Ida =" + " : " + dtasIdas[j] + " : " + "Volta =" + " : " + dtasVoltas[j]);
                //System.out.println(dtasVoltas[j]);
                j++;
            }
        }
        this.jListLatam.setModel(listLatam);
    }
    
    
    private void trechosEncontrados(ArrayList<Trecho> trechos) {
        DefaultListModel listAzul = new DefaultListModel();
        DefaultListModel listGol = new DefaultListModel();
        DefaultListModel listLatam = new DefaultListModel();
        Iterator iterTrechos = trechos.iterator();

        while (iterTrechos.hasNext()) {
            Trecho t = (Trecho) iterTrechos.next();
            if (t != null) {
                System.out.println("Tem objeto!");
                System.out.println(t.getCompanhia());
                if (t.getCompanhia().compareTo("Azul Airlines") == 0) {
                    System.out.println("Entrei");
                    Iterator iterDatasIdas = t.getDatasIdas().iterator();
                    Iterator iterDatasVoltas = t.getDatasVoltas().iterator();
                    while (iterDatasIdas.hasNext()) {
                        String ida = (String) iterDatasIdas.next();
                        while (iterDatasVoltas.hasNext()) {
                            String volta = (String) iterDatasVoltas.next();
                            listAzul.addElement(t.toString() + " : " + "Ida =" + " : " + ida + " : " + "Volta =" + " : " + volta);
                        }
                    }
                    this.jListAzul.setModel(listAzul);
                }
                if (t.getCompanhia().compareTo("Gol Airlines") == 0) {
                    System.out.println("Entrei");
                    Iterator iterDatasIdas = t.getDatasIdas().iterator();
                    Iterator iterDatasVoltas = t.getDatasVoltas().iterator();
                    while (iterDatasIdas.hasNext()) {
                        String ida = (String) iterDatasIdas.next();
                        while (iterDatasVoltas.hasNext()) {
                            String volta = (String) iterDatasVoltas.next();
                            listAzul.addElement(t.toString() + " : " + "Ida =" + " : " + ida + " : " + "Volta =" + " : " + volta);
                        }
                    }
                    this.jListGol.setModel(listGol);
                }
                if (t.getCompanhia().compareTo("Latam Airlines") == 0) {
                    System.out.println("Entrei");
                    Iterator iterDatasIdas = t.getDatasIdas().iterator();
                    Iterator iterDatasVoltas = t.getDatasVoltas().iterator();
                    while (iterDatasIdas.hasNext()) {
                        String ida = (String) iterDatasIdas.next();
                        while (iterDatasVoltas.hasNext()) {
                            String volta = (String) iterDatasVoltas.next();
                            listAzul.addElement(t.toString() + " : " + "Ida =" + " : " + ida + " : " + "Volta =" + " : " + volta);
                        }
                    }
                    this.jListLatam.setModel(listLatam);
                }
            }

        }
    }

    

    private void changeColor() {
        this.jLayeredPane1.setBackground(new java.awt.Color(0, 124, 255));
        this.jLayeredPane3.setBackground(new java.awt.Color(255, 255, 255));
        this.jLayeredPane1.setOpaque(true);
        this.jLayeredPane3.setOpaque(true);
        
        this.jLabel9.setText(facade.getNomeCompleto());

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaOperacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaOperacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaOperacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaOperacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    TelaOperacoes telaOpera = new TelaOperacoes();
                    telaOpera.changeColor();
                    telaOpera.trechosDisponiveis();
                    telaOpera.setVisible(true);

                } catch (RemoteException ex) {
                    Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NotBoundException ex) {
                    Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonReservar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JList<String> jListAzul;
    private javax.swing.JList<String> jListGol;
    private javax.swing.JList<String> jListLatam;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextFieldDestino1;
    private javax.swing.JTextField jTextFieldOrigem1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        TelaOperacoes telaOpera = new TelaOperacoes(this.facade);
        telaOpera.changeColor();
        try {
            telaOpera.trechosDisponiveis();
            telaOpera.setVisible(true);

        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(TelaOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
